package com.announcify.ui.activity;

import android.content.Context;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.media.AudioManager;
import android.os.Bundle;
import android.provider.MediaStore.Audio;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.CheckedTextView;
import android.widget.CursorAdapter;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.TableRow;
import android.widget.TextView;

import com.announcify.R;
import com.announcify.api.sql.model.TranslationModel;
import com.announcify.api.util.AnnouncifySettings;
import com.announcify.service.ManagerService;
import com.announcify.tts.Speaker;

public class ReplaceActivity extends BaseActivity {

    private SimpleCursorAdapter adapter;

    private EditText editText;

    private ListView list;

    private TranslationModel model;

    private Cursor cursor;


    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);

        setContentView(R.layout.activity_choose);

        editText = (EditText)findViewById(R.id.withEdit);
        list = (ListView)findViewById(android.R.id.list);

        model = new TranslationModel(this);
        cursor = model.getAll();
        adapter = new SimpleCursorAdapter(this, R.layout.list_item_choose, cursor, new String[] {TranslationModel.KEY_PLUGIN_FROM, TranslationModel.KEY_PLUGIN_TO}, new int[] {R.id.textLeft, R.id.textRight});

        list.setAdapter(adapter);

        ((ImageButton)findViewById(R.id.speakButton)).setOnClickListener(new OnClickListener() {

            public void onClick(final View v) {
                speak(editText.getText().toString());
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(final Menu menu) {
        super.onCreateOptionsMenu(menu);

        getMenuInflater().inflate(R.menu.menu_choose, menu);
        menu.removeItem(R.id.menu_add_all);

        return true;
    }

    @Override
    public boolean onMenuItemSelected(final int featureId, final MenuItem item) {
//        final String replace = ((EditText)findViewById(R.id.replaceEdit)).getText().toString();
//
//        switch (item.getItemId()) {
//            case R.id.menu_add: {
//                final String with = ((EditText)findViewById(R.id.withEdit)).getText().toString();
//                adapter.add(replace);
//                break;
//            }
//
//            case R.id.menu_remove: {
//                adapter.remove(replace);
//                break;
//            }
//
//            case R.id.menu_remove_all: {
//                adapter.clear();
//                break;
//            }
//        }
//
//        editor.commit();
//        adapter.notifyDataSetChanged();
        
        return super.onMenuItemSelected(featureId, item);
    }

    private void speak(final String text) {
        Speaker speaker = new Speaker(this, null);
        speaker.speak(text);
        speaker.shutdown();
    }
}
