package com.announcify.engine.storage;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

import com.google.gson.Gson;

public class JSONEngine {
    
    public static final String ADDRESS = "http://announcify-jsonengine.appspot.com/";
    
    
    private static Gson gson = new Gson();
    
    public static Gson getGson() {
        return gson;
    }
    
    
    public static boolean persist(JSONable object) throws IOException {
        System.out.println(object.toJSON());
        
        HttpURLConnection connection = null;

        OutputStreamWriter writer = null;
        BufferedWriter buffWriter = null;
        try {
            final URL url = new URL(ADDRESS + "_je/" + object.getClass().getSimpleName());
            connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setReadTimeout(3000);
            connection.setDoOutput(true);
            connection.connect();

            writer = new OutputStreamWriter(connection.getOutputStream());
            buffWriter = new BufferedWriter(writer);
            buffWriter.write("_doc=" + object.toJSON());
        } finally {
            if (buffWriter != null) {
                buffWriter.flush();
                buffWriter.close();
            }

            if (writer != null) writer.close();

            if (connection != null) {
                connection.disconnect();
                return connection.getResponseCode() == 200 ? true : false;
            }
        }

        return false;
    }
    
    public static boolean update(JSONable object, String docId) throws IOException {
        HttpURLConnection connection = null;

        OutputStreamWriter writer = null;
        BufferedWriter buffWriter = null;
        try {
            final URL url = new URL(ADDRESS + "_je/" + object.getClass().getSimpleName() + "/" + docId);
            connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setReadTimeout(3000);
            connection.setDoOutput(true);
            connection.connect();

            writer = new OutputStreamWriter(connection.getOutputStream());
            buffWriter = new BufferedWriter(writer);
            buffWriter.write("_doc=" + object.toJSON());
        } finally {
            if (buffWriter != null) {
                buffWriter.flush();
                buffWriter.close();
            }

            if (writer != null) writer.close();

            if (connection != null) {
                connection.disconnect();
                return connection.getResponseCode() == 200 ? true : false;
            }
        }

        return false;
    }
}
