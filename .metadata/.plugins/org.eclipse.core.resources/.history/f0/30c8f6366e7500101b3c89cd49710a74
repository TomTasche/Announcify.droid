package com.announcify.engine.gmail;

import java.io.IOException;
import java.util.Scanner;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.scribe.builder.ServiceBuilder;
import org.scribe.builder.api.GoogleApi;
import org.scribe.model.OAuthRequest;
import org.scribe.model.Response;
import org.scribe.model.Token;
import org.scribe.model.Verb;
import org.scribe.model.Verifier;
import org.scribe.oauth.OAuthService;

import com.announcify.engine.Servlet;

@SuppressWarnings("serial")
public class GMailServlet extends Servlet {

	private static final String PROTECTED_RESOURCE_URL = "https://mail.google.com/mail/feed/atom";
	private static final String SCOPE = "https://mail.google.com/mail/feed/atom/";

	public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		resp.setContentType("text/plain");

		try {
			OAuthService service = new ServiceBuilder()
			.provider(GoogleApi.class)
			.apiKey("966887741266.apps.googleusercontent.com")
			.apiSecret("CO7G2by/IHRH+j2e/14fVLwA")
			.scope(SCOPE)
			.callback(HOST + "gmail/fetch")
			.build();
			
			Scanner scanner = new Scanner(System.in);

			Verifier verifier = new Verifier(req.getParameter("oauth_verifier"));

			// Trade the Request Token and Verfier for the Access Token
			Token accessToken = service.getAccessToken(auth.getRequestToken(), verifier);
			System.out.println();

			// Now let's go and ask for a protected resource!
			OAuthRequest request = new OAuthRequest(Verb.GET, PROTECTED_RESOURCE_URL);
			service.signRequest(accessToken, request);
			Response response = request.send();
			System.out.println(response.getBody());
			resp.getWriter().write(response.getBody());

			System.out.println();
			System.out.println("Thats it man! Go and build something awesome with Scribe! :)");
		} catch (Exception e) {
			e.printStackTrace();

			resp.sendError(500);
		}
	}
}
