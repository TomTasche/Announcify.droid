package com.announcify.ui.activity;

import android.content.Context;
import android.database.Cursor;
import android.graphics.Color;
import android.os.Bundle;
import android.provider.BaseColumns;
import android.provider.ContactsContract.Contacts;
import android.provider.ContactsContract.Groups;
import android.view.ContextMenu;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AutoCompleteTextView;
import android.widget.CheckedTextView;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.SimpleCursorAdapter.CursorToStringConverter;
import android.widget.TextView;

import com.announcify.R;
import com.announcify.api.background.sql.model.GroupModel;
import com.announcify.api.background.util.AnnouncifySettings;
import com.announcify.api.ui.activity.BaseActivity;


public class ChooserActivity extends BaseActivity {

    private class SimpleWhiteCursorAdapter extends SimpleCursorAdapter {

        public SimpleWhiteCursorAdapter(final Context context,
                final int layout, final Cursor c, final String[] from,
                final int[] to) {
            super(context, layout, c, from, to);
        }

        @Override
        public View newView(final Context context, final Cursor cursor,
                final ViewGroup parent) {
            final View view = super.newView(context, cursor, parent);
            ((TextView) view.findViewById(android.R.id.text1))
            .setTextColor(Color.BLACK);
            return view;
        }
    }

    private CheckedTextView checkBlock;
    private ListView list;
    private AutoCompleteTextView auto;
    private SimpleCursorAdapter listAdapter;
    private SimpleCursorAdapter autoAdapter;
    private GroupModel model;
    private Cursor listCursor;
    private Cursor autoCursor;
    private AnnouncifySettings settings;

    @Override
    public boolean onContextItemSelected(final MenuItem item) {
        final AdapterView.AdapterContextMenuInfo info = (AdapterView.AdapterContextMenuInfo) item
        .getMenuInfo();

        if (item.getItemId() == R.id.menu_remove) {
            model.remove(info.id);

            refreshList();
        }

        return super.onContextItemSelected(item);
    }

    @Override
    protected void onCreate(final Bundle bundle) {
        super.onCreate(bundle, R.layout.activity_choose);

        settings = new AnnouncifySettings(this);

        checkBlock = (CheckedTextView) findViewById(R.id.check_block);

        listAdapter = new SimpleWhiteCursorAdapter(this,
                android.R.layout.simple_list_item_1, null,
                null, 
                new int[] { android.R.id.text1 });

        list = (ListView) findViewById(android.R.id.list);
        list.setAdapter(listAdapter);
        list.setBackgroundColor(Color.WHITE);
        list.setCacheColorHint(Color.TRANSPARENT);
        list.setFastScrollEnabled(true);

        registerForContextMenu(list);

        autoAdapter = new SimpleWhiteCursorAdapter(this,
                android.R.layout.simple_list_item_1, null,
                null, new int[] { android.R.id.text1 });

        auto = (AutoCompleteTextView) findViewById(R.id.auto_edit_chooser);
        auto.setSingleLine();
        auto.setAdapter(autoAdapter);
        auto.setOnItemClickListener(new OnItemClickListener() {

            public void onItemClick(final AdapterView<?> parent,
                    final View view, final int position, final long id) {
                model.add(autoAdapter.getItemId(position), ((TextView) view)
                        .getText().toString());

                refreshList();

                auto.setText("");
            }
        });
    }

    @Override
    public void onCreateContextMenu(final ContextMenu menu, final View v,
            final ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);

        getMenuInflater().inflate(R.menu.context_choose, menu);
    }

    @Override
    protected void onStart() {
        super.onStart();

        refreshList();

        autoCursor = getContentResolver().query(Contacts.CONTENT_URI,
                new String[] { Contacts._ID, Contacts.DISPLAY_NAME }, null, null,
                Contacts.DISPLAY_NAME);
        autoAdapter.changeCursor(autoCursor);
    }

    @Override
    protected void onStop() {
        listCursor.close();
        autoCursor.close();

        super.onStop();
    }

    private void refreshList() {
        if (listCursor != null) {
            listCursor.close();
        }

        listCursor = model.getAll();
        listAdapter.changeCursor(listCursor);
    }
}
