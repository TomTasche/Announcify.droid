package com.announcify.engine.gmail;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.swing.text.AsyncBoxView.ChildState;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.apache.tools.ant.util.XMLFragment.Child;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class GmailParser {
    
    private static final String TAG_COUNT = "fullcount";
    private static final String TAG_ENTRY = "entry";
    private static final String TAG_ENTRY_TITLE = "title";
    private static final String TAG_ENTRY_AUTHOR = "author";
    private static final String TAG_ENTRY_AUTHOR_NAME = "name";
    

    private final DocumentBuilder builder;


    public GmailParser() throws ParserConfigurationException {
        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
    }

    public List<Map<String, String>> parse(InputSource source) throws SAXException, IOException  {
        LinkedList<HashMap<String, String>> mails = new LinkedList<HashMap<String,String>>();
        
        Document document = builder.parse(source);
        
        NodeList nodes = document.getElementsByTagName(TAG_COUNT);
        System.out.println(nodes.item(0).getTextContent());
        
        nodes = document.getElementsByTagName(TAG_ENTRY);
        for (int i = 0; i < nodes.getLength(); i++) {
            
            
            Element element = (Element) nodes.item(i);
            System.out.println(element.getElementsByTagName(TAG_ENTRY_TITLE).item(0).getTextContent());
            
            element = (Element) element.getElementsByTagName(TAG_ENTRY_AUTHOR).item(0);
            System.out.println(element.getElementsByTagName(TAG_ENTRY_AUTHOR_NAME).item(0).getTextContent());
        }
        
        return mails;
    }
}
