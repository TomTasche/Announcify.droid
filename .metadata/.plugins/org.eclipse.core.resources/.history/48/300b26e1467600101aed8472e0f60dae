package com.announcify.engine.gmail;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

public class GmailParser {

    private static final String TAG_COUNT = "fullcount";
    private static final String TAG_ENTRY = "entry";
    private static final String TAG_ENTRY_TITLE = "title";
    private static final String TAG_ENTRY_AUTHOR = "author";
    private static final String TAG_ENTRY_AUTHOR_NAME = "name";


    private final DocumentBuilder builder;


    public GmailParser() throws ParserConfigurationException {
        builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
    }

    public Map<String, String>[] parse(InputSource source) throws SAXException, IOException  {
        ArrayList<Map<String, String>> mails = new ArrayList<Map<String,String>>();

        Document document = builder.parse(source);

        NodeList nodes = document.getElementsByTagName(TAG_COUNT);
        String unread = nodes.item(0).getTextContent();
        
        if (Integer.parseInt(unread) <= 0) return mails.toArray();

        
        nodes = document.getElementsByTagName(TAG_ENTRY);
        for (int i = 0; i < nodes.getLength(); i++) {
            Map<String, String> mail = new HashMap<String, String>();

            Element element = (Element) nodes.item(i);
            String title = element.getElementsByTagName(TAG_ENTRY_TITLE).item(0).getTextContent();
            mail.put(TAG_ENTRY_TITLE, title);

            element = (Element) element.getElementsByTagName(TAG_ENTRY_AUTHOR).item(0);
            String name = element.getElementsByTagName(TAG_ENTRY_AUTHOR_NAME).item(0).getTextContent();
            mail.put(TAG_ENTRY_AUTHOR_NAME, name);
            
            mail.put(TAG_COUNT, unread);

            if (!mail.isEmpty()) mails.add(mail);
        }

        return mails.toArray(Map<String, String>);
    }
}
