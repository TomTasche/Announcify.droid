package com.announcify.activity;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.DialogInterface.OnClickListener;
import android.content.SharedPreferences.Editor;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Bundle;
import android.preference.Preference;
import android.preference.Preference.OnPreferenceChangeListener;
import android.preference.PreferenceActivity;
import android.text.InputType;
import android.widget.EditText;

import com.announcify.util.AnnouncifySettings;
import com.announcify.util.PluginSettings;

public class AnnouncifyActivity extends PreferenceActivity {
	public static String ACTION_SETTINGS;

	protected void setCustomListeners(PluginSettings settings) {
		setCustomNumberListener(PluginSettings.KEY_READING_WAIT, settings);
		setCustomNumberListener(PluginSettings.KEY_READING_BREAK, settings);
		setCustomNumberListener(PluginSettings.KEY_READING_REPEAT, settings);

		setCustomAnnouncementListener(PluginSettings.KEY_READING_ANNOUNCEMENT, settings);
		setCustomAnnouncementListener(PluginSettings.KEY_READING_DISCREET, settings);
		setCustomAnnouncementListener(PluginSettings.KEY_READING_UNKNOWN, settings);
	}

	private void setCustomNumberListener(final String key, final PluginSettings settings) {
		getPreferenceScreen().findPreference(key).setOnPreferenceChangeListener(new OnPreferenceChangeListener() {

			public boolean onPreferenceChange(Preference preference, final Object newValue) {
				final EditText edit = new EditText(AnnouncifyActivity.this);
				edit.setInputType(InputType.TYPE_CLASS_NUMBER);
				Builder builder = new AlertDialog.Builder(AnnouncifyActivity.this);
				builder.setTitle("Choose a custom value");
				builder.setView(edit);
				builder.setPositiveButton("Save", new OnClickListener() {

					public void onClick(DialogInterface dialog, int which) {
						Editor editor = AnnouncifyActivity.this.getSharedPreferences(settings.getSharedPreferencesName(), Context.MODE_WORLD_READABLE).edit();
						editor.putString(key, edit.getText().toString());
						editor.commit();
					}
				});
				builder.setCancelable(false);
				builder.setNegativeButton("Cancel", new OnClickListener() {

					public void onClick(DialogInterface dialog, int which) {
						Editor editor = AnnouncifyActivity.this.getSharedPreferences(settings.getSharedPreferencesName(), Context.MODE_WORLD_READABLE).edit();
						editor.putString(key, newValue.toString());
						editor.commit();
					}
				});
				builder.create().show();
				return false;
			}
		});
	}

	private void setCustomAnnouncementListener(String key, PluginSettings settings) {
		getPreferenceScreen().findPreference(key).setOnPreferenceChangeListener(new OnPreferenceChangeListener() {

			public boolean onPreferenceChange(Preference preference, Object newValue) {
				return false;
			}
		});
	}

	protected void parseRingtone(final int requestCode, final int resultCode, final Intent data, final int type) {
		if (requestCode == 100 && resultCode == RESULT_OK) {
			final Editor editor = getPreferenceManager().getSharedPreferences().edit();

			if (data != null && data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI) != null) {
				editor.putString("preference_ringtone", data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI).toString());

				RingtoneManager.setActualDefaultRingtoneUri(this, type, null);
			} else {
				editor.putString("preference_ringtone", "");

				final Intent intent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
				intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, false);
				intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_SILENT, false);
				intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, type);
				intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TITLE, "Choose new Ringtone to be played by Android");

				startActivityForResult(intent, 101);
			}

			editor.commit();
		} else if (requestCode == 101 && resultCode == RESULT_OK && data != null && data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI) != null) {
			RingtoneManager.setActualDefaultRingtoneUri(this, type, (Uri) data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI));
		}
	}
}
