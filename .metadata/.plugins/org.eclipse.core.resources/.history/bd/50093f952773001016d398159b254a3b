package at.tomtasche.contacts.droid;

import java.util.LinkedList;
import java.util.List;

import android.content.Context;
import android.content.res.Resources;
import at.tomtasche.contacts.droid.lookup.LookupMethod;

/**
 * Used to gather information, like name, number, etc about a contact.
 * 
 * @author Thomas Taschauer
 */
public class Contact {

    private final LookupMethod lookupMethod;
    private final Context context;

    private String firstname;
    private String lastname;
    private String nickname;
    private String title; // Dr., Sir, ...
    private String fullname;
    private String address; // number, mail, twitter, ...
    private String type;
    private String lookupString;

    private LinkedList<Long> groups;


    /**
     * Initializes the Contact and attempts to fetch his lookupstring.
     * 
     * @param context
     * @param lookupMethod A class implementing the LookupMethod interface. For example Chat, Twitter, Number or Mail.
     * @param address The address of the contact you want to gather information about.
     */
    public Contact(Context context, final LookupMethod lookupMethod, String address) {
        this.context = context;
        this.address = address;
        this.lookupMethod = lookupMethod;

        lookupMethod.getLookup(this);
    }


    public String getAddress() {
        return address;
    }

    public String getFirstname() {
        if (firstname == null) Name.getFirstname(context, this);

        return firstname;
    }

    public String getFullname() {
        if (fullname == null) Name.getFullname(context, this);

        return fullname;
    }

    /**
     * The ids of the groups the contact is member of.
     * 
     * @return A list of ids.
     */
    public List<Long> getGroups() {
        if (groups == null) Name.getGroups(context, this);

        return groups;
    }

    /**
     * 
     * @return null or the contact's lastname.
     */
    public String getLastname() {
        if (lastname == null) Name.getLastname(context, this);

        return lastname;
    }

    public LookupMethod getLookupMethod() {
        return lookupMethod;
    }

    public String getLookupString() {
        return lookupString;
    }

    /**
     * 
     * @return null or the contact's nickname.
     */
    public String getNickname() {
        if (nickname == null) Name.getNickname(context, this);

        return nickname;
    }

    /**
     * E.g. "Dr" or "Sir".
     * 
     * @return null or the contact's title.
     */
    public String getTitle() {
        if (title == null) Name.getPrefix(context, this);

        return title;
    }

    /**
     * E.g. "Mobile" or "Home".
     * 
     * @return null or the address type.
     */
    public String getAddressType() {
        if (type == null) getLookupMethod().getType();

        return type;
    }

    /**
     * 
     * @return Localized string for "unknown".
     */
    public String getUnknownString() {
        final String s = Resources.getSystem().getString(android.R.string.unknownName);
        return s.substring(1, s.length() - 1);
    }
}
