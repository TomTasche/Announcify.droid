package at.tomtasche.contacts.droid;

import java.util.LinkedList;
import java.util.List;

import android.content.Context;
import android.content.res.Resources;
import at.tomtasche.contacts.droid.lookup.LookupMethod;

/**
 * Used to gather information, like name, number, etc about a contact.
 * 
 * @author Thomas Taschauer
 */
public class Contact {

    private final LookupMethod lookupMethod;
    private final Context context;

    private String firstname;
    private String lastname;
    private String nickname;
    private String title; // Dr., Sir, ...
    private String fullname;
    private String address; // number, mail, twitter, ...
    private String type;
    private String lookupString;

    private LinkedList<Long> groups;

    /**
     * Initializes the Contact and attempts to fetch his lookupstring.
     * 
     * @param context
     * @param lookupMethod
     *            A class implementing the LookupMethod interface. For example
     *            Chat, Twitter, Number or Mail.
     * @param address
     *            The address of the contact you want to gather information
     *            about.
     */
    public Contact(final Context context, final LookupMethod lookupMethod, final String address) {
        this.context = context;
        this.address = address;
        this.lookupMethod = lookupMethod;

        lookupMethod.getLookup(this);
    }

    public String getAddress() {
        return address;
    }

    /**
     * E.g. "Thomas".
     * 
     * @return null or the contact's firstname.
     */
    public String getFirstname() {
        if (firstname == null) {
            Name.getFirstname(context, this);
        }

        return firstname;
    }

    /**
     * E.g. "Thomas Taschauer".
     * 
     * @return null or the contact's full name.
     */
    public String getFullname() {
        if (fullname == null) {
            Name.getFullname(context, this);
        }

        return fullname;
    }

    /**
     * The ids of the groups the contact is member of.
     * 
     * @return A list of ids.
     */
    public List<Long> getGroups() {
        if (groups == null) {
            Name.getGroups(context, this);
        }

        return groups;
    }

    /**
     * E.g. "Taschauer".
     * 
     * @return null or the contact's lastname.
     */
    public String getLastname() {
        if (lastname == null) {
            Name.getLastname(context, this);
        }

        return lastname;
    }

    public LookupMethod getLookupMethod() {
        return lookupMethod;
    }

    public String getLookupString() {
        return lookupString;
    }

    /**
     * E.g. "Tom"
     * 
     * @return null or the contact's nickname.
     */
    public String getNickname() {
        if (nickname == null) {
            Name.getNickname(context, this);
        }

        return nickname;
    }

    /**
     * E.g. "Dr" or "Sir".
     * 
     * @return null or the contact's title.
     */
    public String getTitle() {
        if (title == null) {
            Name.getPrefix(context, this);
        }

        return title;
    }

    /**
     * E.g. "Mobile" or "Home".
     * 
     * @return null or the address type.
     */
    public String getAddressType() {
        if (type == null) {
            getLookupMethod().getType();
        }

        return type;
    }

    /**
     * 
     * @return Localized string for "unknown".
     */
    public String getUnknownString() {
        final String s = Resources.getSystem().getString(android.R.string.unknownName);
        return s.substring(1, s.length() - 1);
    }

    public void setAddress(final String address) {
        if ((address == null) || (address.trim().length() == 0)) {
            return;
        }
        this.address = address;
    }

    public void setAddressType(final String addressType) {
        if ((addressType == null) || (addressType.trim().length() == 0)) {
            return;
        }
        type = addressType;
    }

    public void setFirstname(final String firstname) {
        this.firstname = firstname;
    }

    public void setFullname(final String name) {
        if ((name == null) || (name.trim().length() == 0)) {
            return;
        }
        fullname = name;
    }

    public void setGroups(final LinkedList<Long> groups) {
        this.groups = groups;
    }

    public void setLastname(final String lastname) {
        this.lastname = lastname;
    }

    public void setLookupString(final String lookupString) {
        if ((lookupString == null) || (lookupString.trim().length() == 0)) {
            return;
        }
        this.lookupString = lookupString;
    }

    public void setNickname(final String nickname) {
        if ((nickname == null) || (nickname.trim().length() == 0)) {
            return;
        }
        this.nickname = nickname;
    }

    public void setTitle(final String title) {
        this.title = title;
    }

    public void setType(final String type) {
        this.type = type;
    }
}
